*curl_setopt*

(PHP 4 >= 4.0.2, PHP 5, PHP 7)

curl_setopt â€” Set an option for a cURL transfer

===============================================================================
[ Description ]

  curl_setopt ( CurlHandle $handle , int $option , mixed $value ) : bool~

Sets an option on the given cURL session handle.

===============================================================================
[ Parameters ]

{handle}

  A cURL handle returned by |curl_init|.

{option}

  The CURLOPT_XXX option to set.

{value}

  The value to be set on {option}.

  {value} should be a bool for the following values of the {option} parameter:

               Option                   Set {value} to              Notes
                                   TRUE to automatically
                                   set the Referer: field
  CURLOPT_AUTOREFERER              in requests where it
                                   follows a Location:
                                   redirect.
                                                            From PHP 5.1.3, this
                                   TRUE to return the raw   option has no effect:
                                   output when              the raw output will
  CURLOPT_BINARYTRANSFER           CURLOPT_RETURNTRANSFER   always be returned
                                   is used.                 when
                                                            CURLOPT_RETURNTRANSFER
                                                            is used.
                                   TRUE to mark this as a
                                   new cookie "session". It
                                   will force libcurl to
                                   ignore all cookies it is
                                   about to load that are
                                   "session cookies" from
                                   the previous session. By
                                   default, libcurl always
  CURLOPT_COOKIESESSION            stores and loads all
                                   cookies, independent if
                                   they are session cookies
                                   or not. Session cookies
                                   are cookies without
                                   expiry date and they are
                                   meant to be alive and
                                   existing for this
                                   "session" only.
                                   TRUE to output SSL       Added in cURL 7.19.1.
                                   certification            Available since PHP
  CURLOPT_CERTINFO                 information to STDERR on 5.3.2. Requires
                                   secure transfers.        CURLOPT_VERBOSE to be
                                                            on to have an effect.
                                   TRUE tells the library
                                   to perform all the
                                   required proxy           Added in 7.15.2.
  CURLOPT_CONNECT_ONLY             authentication and       Available since PHP
                                   connection setup, but no 5.5.0.
                                   data transfer. This
                                   option is implemented
                                   for HTTP, SMTP and POP3.
                                   TRUE to convert Unix
  CURLOPT_CRLF                     newlines to CRLF
                                   newlines on transfers.
                                   TRUE to not allow URLs   Added in cURL 7.61.0.
  CURLOPT_DISALLOW_USERNAME_IN_URL that include a username. Available since PHP
                                   Usernames are allowed by 7.3.0.
                                   default (0).
                                   TRUE to shuffle the
                                   order of all returned
                                   addresses so that they
                                   will be used in a random Added in cURL 7.60.0.
  CURLOPT_DNS_SHUFFLE_ADDRESSES    order, when a name is    Available since PHP
                                   resolved and more than   7.3.0.
                                   one IP address is
                                   returned. This may cause
                                   IPv4 to be used before
                                   IPv6 or vice versa.
                                   TRUE to send an HAProxy
                                   PROXY protocol v1 header Added in cURL 7.60.0.
  CURLOPT_HAPROXYPROTOCOL          at the start of the      Available since PHP
                                   connection. The default  7.3.0.
                                   action is not to send
                                   this header.
                                   TRUE to enable built-in
                                   SSH compression. This is Added in cURL 7.56.0.
  CURLOPT_SSH_COMPRESSION          a request, not an order; Available since PHP
                                   the server may or may    7.3.0.
                                   not do it.
                                   TRUE to use a global DNS
                                   cache. This option is
                                   not thread-safe. It is
  CURLOPT_DNS_USE_GLOBAL_CACHE     conditionally enabled by
                                   default if PHP is built
                                   for non-threaded use
                                   (CLI, FCGI,
                                   Apache2-Prefork, etc.).
                                   TRUE to fail verbosely
                                   if the HTTP code
                                   returned is greater than
  CURLOPT_FAILONERROR              or equal to 400. The
                                   default behavior is to
                                   return the page
                                   normally, ignoring the
                                   code.
                                   TRUE to enable TLS false Added in cURL 7.42.0.
  CURLOPT_SSL_FALSESTART           start.                   Available since PHP
                                                            7.0.7.
                                   TRUE to attempt to
                                   retrieve the
                                   modification date of the
  CURLOPT_FILETIME                 remote document. This
                                   value can be retrieved
                                   using the
                                   CURLINFO_FILETIME option
                                   with |curl_getinfo|.
                                   TRUE to follow any
                                   "Location: " header that
                                   the server sends as part
                                   of the HTTP header (note
  CURLOPT_FOLLOWLOCATION           this is recursive, PHP
                                   will follow as many
                                   "Location: " headers
                                   that it is sent, unless
                                   CURLOPT_MAXREDIRS is
                                   set).
                                   TRUE to force the
                                   connection to explicitly
  CURLOPT_FORBID_REUSE             close when it has
                                   finished processing, and
                                   not be pooled for reuse.
                                   TRUE to force the use of
  CURLOPT_FRESH_CONNECT            a new connection instead
                                   of a cached one.
                                   TRUE to use EPRT (and
                                   LPRT) when doing active
  CURLOPT_FTP_USE_EPRT             FTP downloads. Use FALSE
                                   to disable EPRT and LPRT
                                   and use PORT only.
                                   TRUE to first try an
                                   EPSV command for FTP
  CURLOPT_FTP_USE_EPSV             transfers before
                                   reverting back to PASV.
                                   Set to FALSE to disable
                                   EPSV.
                                   TRUE to create missing
                                   directories when an FTP
  CURLOPT_FTP_CREATE_MISSING_DIRS  operation encounters a
                                   path that currently
                                   doesn't exist.
                                   TRUE to append to the
  CURLOPT_FTPAPPEND                remote file instead of
                                   overwriting it.
                                   TRUE to disable TCP's    Available since PHP
                                   Nagle algorithm, which   5.2.1 for versions
  CURLOPT_TCP_NODELAY              tries to minimize the    compiled with libcurl
                                   number of small packets  7.11.2 or greater.
                                   on the network.
                                   An alias of
  CURLOPT_FTPASCII                 CURLOPT_TRANSFERTEXT.
                                   Use that instead.
                                   TRUE to only list the
  CURLOPT_FTPLISTONLY              names of an FTP
                                   directory.
  CURLOPT_HEADER                   TRUE to include the
                                   header in the output.
                                   TRUE to track the        Available since PHP
  CURLINFO_HEADER_OUT              handle's request string. 5.1.3. The CURLINFO_
                                                            prefix is intentional.
                                   Whether to allow HTTP/   Available since PHP
                                   0.9 responses. Defaults  7.3.15 and 7.4.3,
  CURLOPT_HTTP09_ALLOWED           to FALSE as of libcurl   respectively, if built
                                   7.66.0; formerly it      against libcurl >=
                                   defaulted to TRUE.       7.64.0
                                   TRUE to reset the HTTP
                                   request method to GET.
  CURLOPT_HTTPGET                  Since GET is the
                                   default, this is only
                                   necessary if the request
                                   method has been changed.
  CURLOPT_HTTPPROXYTUNNEL          TRUE to tunnel through a
                                   given HTTP proxy.
                                   FALSE to get the raw     Available as of PHP
  CURLOPT_HTTP_CONTENT_DECODING    HTTP response body.      5.5.0 if built against
                                                            libcurl >= 7.16.2.
                                   TRUE to keep sending the
                                   request body if the HTTP
                                   code returned is equal
                                   to or larger than 300.
                                   The default action would Available as of PHP
  CURLOPT_KEEP_SENDING_ON_ERROR    be to stop sending and   7.3.0 if built against
                                   close the stream or      libcurl >= 7.51.0.
                                   connection. Suitable for
                                   manual NTLM
                                   authentication. Most
                                   applications do not need
                                   this option.
                                   TRUE to be completely    Removed in cURL 7.15.5
  CURLOPT_MUTE                     silent with regards to   (You can use
                                   the cURL functions.      CURLOPT_RETURNTRANSFER
                                                            instead)
                                   TRUE to scan the ~
                                   /.netrc file to find a
  CURLOPT_NETRC                    username and password
                                   for the remote site that
                                   a connection is being
                                   established with.
                                   TRUE to exclude the body
                                   from the output. Request
  CURLOPT_NOBODY                   method is then set to
                                   HEAD. Changing this to
                                   FALSE does not change it
                                   to GET.
                                   TRUE to disable the
                                   progress meter for cURL
                                   transfers.


                                     Note:
  CURLOPT_NOPROGRESS
                                     PHP automatically sets
                                     this option to TRUE,
                                     this should only be
                                     changed for debugging
                                     purposes.

                                   TRUE to ignore any cURL
                                   function that causes a
                                   signal to be sent to the
  CURLOPT_NOSIGNAL                 PHP process. This is     Added in cURL 7.10.
                                   turned on by default in
                                   multi-threaded SAPIs so
                                   timeout options can
                                   still be used.
                                   TRUE to not handle dot   Added in cURL 7.42.0.
  CURLOPT_PATH_AS_IS               dot sequences.           Available since PHP
                                                            7.0.7.
                                   TRUE to wait for         Added in cURL 7.43.0.
  CURLOPT_PIPEWAIT                 pipelining/multiplexing. Available since PHP
                                                            7.0.7.
                                   TRUE to do a regular
                                   HTTP POST. This POST is
  CURLOPT_POST                     the normal application/
                                   x-www-form-urlencoded
                                   kind, most commonly used
                                   by HTML forms.
                                   TRUE to HTTP PUT a file.
  CURLOPT_PUT                      The file to PUT must be
                                   set with CURLOPT_INFILE
                                   and CURLOPT_INFILESIZE.
                                   TRUE to return the
                                   transfer as a string of
  CURLOPT_RETURNTRANSFER           the return value of 
                                   |curl_exec| instead of
                                   outputting it directly.
                                   TRUE to enable sending   Added in cURL 7.31.10.
  CURLOPT_SASL_IR                  the initial response in  Available since PHP
                                   the first packet.        7.0.7.
                                   FALSE to disable ALPN in
                                   the SSL handshake (if    Added in cURL 7.36.0.
  CURLOPT_SSL_ENABLE_ALPN          the SSL backend libcurl  Available since PHP
                                   is built to use supports 7.0.7.
                                   it), which can be used
                                   to negotiate http2.
                                   FALSE to disable NPN in
                                   the SSL handshake (if    Added in cURL 7.36.0.
  CURLOPT_SSL_ENABLE_NPN           the SSL backend libcurl  Available since PHP
                                   is built to use supports 7.0.7.
                                   it), which can be used
                                   to negotiate http2.
                                   FALSE to stop cURL from
                                   verifying the peer's
                                   certificate. Alternate
                                   certificates to verify   TRUE by default as of
  CURLOPT_SSL_VERIFYPEER           against can be specified cURL 7.10. Default
                                   with the CURLOPT_CAINFO  bundle installed as of
                                   option or a certificate  cURL 7.10.
                                   directory can be
                                   specified with the
                                   CURLOPT_CAPATH option.
                                   TRUE to verify the       Added in cURL 7.41.0.
  CURLOPT_SSL_VERIFYSTATUS         certificate's status.    Available since PHP
                                                            7.0.7.
                                   FALSE to stop cURL from
                                   verifying the peer's
                                   certificate. Alternate
                                   certificates to verify
                                   against can be specified
                                   with the CURLOPT_CAINFO  TRUE by default.
  CURLOPT_PROXY_SSL_VERIFYPEER     option or a certificate  Available since PHP
                                   directory can be         7.3.0 and libcurl >=
                                   specified with the       cURL 7.52.0.
                                   CURLOPT_CAPATH option.
                                   When set to false, the
                                   peer certificate
                                   verification succeeds
                                   regardless.
                                   TRUE to suppress proxy
                                   CONNECT response headers
                                   from the user callback
                                   functions
                                   CURLOPT_HEADERFUNCTION   Added in cURL 7.54.0.
  CURLOPT_SUPPRESS_CONNECT_HEADERS and                      Available since PHP
                                   CURLOPT_WRITEFUNCTION,   7.3.0.
                                   when
                                   CURLOPT_HTTPPROXYTUNNEL
                                   is used and a CONNECT
                                   request is made.
                                   TRUE to enable TCP Fast  Added in cURL 7.49.0.
  CURLOPT_TCP_FASTOPEN             Open.                    Available since PHP
                                                            7.0.7.
                                   TRUE to not send TFTP    Added in cURL 7.48.0.
  CURLOPT_TFTP_NO_OPTIONS          options requests.        Available since PHP
                                                            7.0.7.
                                   TRUE to use ASCII mode
                                   for FTP transfers. For
                                   LDAP, it retrieves data
  CURLOPT_TRANSFERTEXT             in plain text instead of
                                   HTML. On Windows
                                   systems, it will not set
                                   STDOUT to binary mode.
                                   TRUE to keep sending the
                                   username and password
                                   when following locations
  CURLOPT_UNRESTRICTED_AUTH        (using
                                   CURLOPT_FOLLOWLOCATION),
                                   even when the hostname
                                   has changed.
  CURLOPT_UPLOAD                   TRUE to prepare for an
                                   upload.
                                   TRUE to output verbose
                                   information. Writes
  CURLOPT_VERBOSE                  output to STDERR, or the
                                   file specified using
                                   CURLOPT_STDERR.

  {value} should be an int for the following values of the {option} parameter:

               Option                         Set {value} to              Notes
                                    The size of the buffer to use for   Added in
  CURLOPT_BUFFERSIZE                each read. There is no guarantee    cURL
                                    this request will be fulfilled,     7.10.
                                    however.
                                    One of the CURLCLOSEPOLICY_*
                                    values.

                                                                        Removed
  CURLOPT_CLOSEPOLICY                 Note:                             in PHP
                                                                        5.6.0.
                                      This option is deprecated, as it
                                      was never implemented in cURL and
                                      never had any effect.

                                    The number of seconds to wait while
  CURLOPT_CONNECTTIMEOUT            trying to connect. Use 0 to wait
                                    indefinitely.
                                    The number of milliseconds to wait
                                    while trying to connect. Use 0 to   Added in
                                    wait indefinitely. If libcurl is    cURL
                                    built to use the standard system    7.16.2.
  CURLOPT_CONNECTTIMEOUT_MS         name resolver, that portion of the  Available
                                    connect will still use full-second  since PHP
                                    resolution for timeouts with a      5.2.3.
                                    minimum timeout allowed of one
                                    second.
                                    The number of seconds to keep DNS
  CURLOPT_DNS_CACHE_TIMEOUT         entries in memory. This option is
                                    set to 120 (2 minutes) by default.
                                                                        Added in
                                    The timeout for Expect:             cURL
  CURLOPT_EXPECT_100_TIMEOUT_MS     100-continue responses in           7.36.0.
                                    milliseconds. Defaults to 1000      Available
                                    milliseconds.                       since PHP
                                                                        7.0.7.
                                    Head start for ipv6 for the happy
                                    eyeballs algorithm. Happy eyeballs  Added in
                                    attempts to connect to both IPv4    cURL
  CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS and IPv6 addresses for dual-stack   7.59.0.
                                    hosts, preferring IPv6 first for    Available
                                    timeout milliseconds. Defaults to   since PHP
                                    CURL_HET_DEFAULT, which is          7.3.0.
                                    currently 200 milliseconds.
                                    The FTP authentication method (when
                                    is activated): CURLFTPAUTH_SSL (try Added in
  CURLOPT_FTPSSLAUTH                SSL first), CURLFTPAUTH_TLS (try    cURL
                                    TLS first), or CURLFTPAUTH_DEFAULT  7.12.2.
                                    (let cURL decide).
                                    How to deal with headers. One of
                                    the following constants: 
                                    CURLHEADER_UNIFIED: the headers
                                    specified in CURLOPT_HTTPHEADER
                                    will be used in requests both to
                                    servers and proxies. With this
                                    option enabled, CURLOPT_PROXYHEADER
                                    will not have any effect. 
                                    CURLHEADER_SEPARATE: makes
                                    CURLOPT_HTTPHEADER headers only get Added in
                                    sent to a server and not to a       cURL
                                    proxy. Proxy headers must be set    7.37.0.
  CURLOPT_HEADEROPT                 with CURLOPT_PROXYHEADER to get     Available
                                    used. Note that if a non-CONNECT    since PHP
                                    request is sent to a proxy, libcurl 7.0.7.
                                    will send both server headers and
                                    proxy headers. When doing CONNECT,
                                    libcurl will send
                                    CURLOPT_PROXYHEADER headers only to
                                    the proxy and then
                                    CURLOPT_HTTPHEADER headers only to
                                    the server. Defaults to
                                    CURLHEADER_SEPARATE as of cURL
                                    7.42.1, and CURLHEADER_UNIFIED
                                    before.
                                    CURL_HTTP_VERSION_NONE (default,
                                    lets CURL decide which version to
                                    use), CURL_HTTP_VERSION_1_0 (forces
                                    HTTP/1.0), CURL_HTTP_VERSION_1_1
                                    (forces HTTP/1.1),
                                    CURL_HTTP_VERSION_2_0 (attempts
  CURLOPT_HTTP_VERSION              HTTP 2), CURL_HTTP_VERSION_2 (alias
                                    of CURL_HTTP_VERSION_2_0),
                                    CURL_HTTP_VERSION_2TLS (attempts
                                    HTTP 2 over TLS (HTTPS) only) or
                                    CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE
                                    (issues non-TLS HTTP requests using
                                    HTTP/2 without HTTP/1.1 Upgrade).
                                    The HTTP authentication method(s)
                                    to use. The options are:
                                    CURLAUTH_BASIC, CURLAUTH_DIGEST,
                                    CURLAUTH_GSSNEGOTIATE,
                                    CURLAUTH_NTLM, CURLAUTH_ANY, and
                                    CURLAUTH_ANYSAFE.

                                    The bitwise | (or) operator can be
                                    used to combine more than one
                                    method. If this is done, cURL will
                                    poll the server to see what methods
  CURLOPT_HTTPAUTH                  it supports and pick the best one.

                                    CURLAUTH_ANY is an alias for
                                    CURLAUTH_BASIC | CURLAUTH_DIGEST |
                                    CURLAUTH_GSSNEGOTIATE |
                                    CURLAUTH_NTLM.

                                    CURLAUTH_ANYSAFE is an alias for
                                    CURLAUTH_DIGEST |
                                    CURLAUTH_GSSNEGOTIATE |
                                    CURLAUTH_NTLM.

                                    The expected size, in bytes, of the
                                    file when uploading a file to a
                                    remote site. Note that using this
  CURLOPT_INFILESIZE                option will not stop libcurl from
                                    sending more data, as exactly what
                                    is sent depends on
                                    CURLOPT_READFUNCTION.
                                    The transfer speed, in bytes per
                                    second, that the transfer should be
  CURLOPT_LOW_SPEED_LIMIT           below during the count of
                                    CURLOPT_LOW_SPEED_TIME seconds
                                    before PHP considers the transfer
                                    too slow and aborts.
                                    The number of seconds the transfer
                                    speed should be below
  CURLOPT_LOW_SPEED_TIME            CURLOPT_LOW_SPEED_LIMIT before PHP
                                    considers the transfer too slow and
                                    aborts.
                                    The maximum amount of persistent
                                    connections that are allowed. When
  CURLOPT_MAXCONNECTS               the limit is reached,
                                    CURLOPT_CLOSEPOLICY is used to
                                    determine which connection to
                                    close.
                                    The maximum amount of HTTP
  CURLOPT_MAXREDIRS                 redirections to follow. Use this
                                    option alongside
                                    CURLOPT_FOLLOWLOCATION.
  CURLOPT_PORT                      An alternative port number to
                                    connect to.
                                    A bitmask of 1 (301 Moved           Added in
                                    Permanently), 2 (302 Found) and 4   cURL
  CURLOPT_POSTREDIR                 (303 See Other) if the HTTP POST    7.19.1.
                                    method should be maintained when    Available
                                    CURLOPT_FOLLOWLOCATION is set and a since PHP
                                    specific type of redirect occurs.   5.3.2.
                                    Bitmask of CURLPROTO_* values. If
                                    used, this bitmask limits what
                                    protocols libcurl may use in the
                                    transfer. This allows you to have a
                                    libcurl built to support a wide
                                    range of protocols but still limit
                                    specific transfers to only be
                                    allowed to use a subset of them. By
                                    default libcurl will accept all
                                    protocols it supports. See also     Added in
  CURLOPT_PROTOCOLS                 CURLOPT_REDIR_PROTOCOLS.            cURL
                                                                        7.19.4.
                                    Valid protocol options are:
                                    CURLPROTO_HTTP, CURLPROTO_HTTPS,
                                    CURLPROTO_FTP, CURLPROTO_FTPS,
                                    CURLPROTO_SCP, CURLPROTO_SFTP,
                                    CURLPROTO_TELNET, CURLPROTO_LDAP,
                                    CURLPROTO_LDAPS, CURLPROTO_DICT,
                                    CURLPROTO_FILE, CURLPROTO_TFTP,
                                    CURLPROTO_ALL

                                    The HTTP authentication method(s)
                                    to use for the proxy connection.
                                    Use the same bitmasks as described  Added in
  CURLOPT_PROXYAUTH                 in CURLOPT_HTTPAUTH. For proxy      cURL
                                    authentication, only CURLAUTH_BASIC 7.10.7.
                                    and CURLAUTH_NTLM are currently
                                    supported.
                                    The port number of the proxy to
  CURLOPT_PROXYPORT                 connect to. This port number can
                                    also be set in CURLOPT_PROXY.
                                    Either CURLPROXY_HTTP (default),    Added in
  CURLOPT_PROXYTYPE                 CURLPROXY_SOCKS4, CURLPROXY_SOCKS5, cURL
                                    CURLPROXY_SOCKS4A or                7.10.
                                    CURLPROXY_SOCKS5_HOSTNAME.
                                    Bitmask of CURLPROTO_* values. If
                                    used, this bitmask limits what
                                    protocols libcurl may use in a
                                    transfer that it follows to in a
                                    redirect when
                                    CURLOPT_FOLLOWLOCATION is enabled.
                                    This allows you to limit specific
                                    transfers to only be allowed to use Added in
  CURLOPT_REDIR_PROTOCOLS           a subset of protocols in            cURL
                                    redirections. By default libcurl    7.19.4.
                                    will allow all protocols except for
                                    FILE and SCP. This is a difference
                                    compared to pre-7.19.4 versions
                                    which unconditionally would follow
                                    to all protocols supported. See
                                    also CURLOPT_PROTOCOLS for protocol
                                    constant values.
  CURLOPT_RESUME_FROM               The offset, in bytes, to resume a
                                    transfer from.
                                    The SOCKS5 authentication method(s)
                                    to use. The options are:
                                    CURLAUTH_BASIC, CURLAUTH_GSSAPI,
                                    CURLAUTH_NONE.

                                    The bitwise | (or) operator can be
                                    used to combine more than one
                                    method. If this is done, cURL will
                                    poll the server to see what methods
                                    it supports and pick the best one.
                                                                        Available
                                    CURLAUTH_BASIC allows username/     as of
  CURLOPT_SOCKS5_AUTH               password authentication.            7.3.0 and
                                                                        curl >=
                                    CURLAUTH_GSSAPI allows GSS-API      7.55.0.
                                    authentication.

                                    CURLAUTH_NONE allows no
                                    authentication.

                                    Defaults to CURLAUTH_BASIC|
                                    CURLAUTH_GSSAPI. Set the actual
                                    username and password with the
                                    CURLOPT_PROXYUSERPWD option.

                                    Set SSL behavior options, which is
                                    a bitmask of any of the following
                                    constants: CURLSSLOPT_ALLOW_BEAST:  Added in
                                    do not attempt to use any           cURL
  CURLOPT_SSL_OPTIONS               workarounds for a security flaw in  7.25.0.
                                    the SSL3 and TLS1.0 protocols.      Available
                                    CURLSSLOPT_NO_REVOKE: disable       since PHP
                                    certificate revocation checks for   7.0.7.
                                    those SSL backends where such
                                    behavior is present.
                                    1 to check the existence of a
                                    common name in the SSL peer
                                    certificate. 2 to check the         Support
                                    existence of a common name and also for value
  CURLOPT_SSL_VERIFYHOST            verify that it matches the hostname 1 removed
                                    provided. 0 to not check the names. in cURL
                                    In production environments the      7.28.1.
                                    value of this option should be kept
                                    at 2 (default value).
                                    One of CURL_SSLVERSION_DEFAULT (0),
                                    CURL_SSLVERSION_TLSv1 (1),
                                    CURL_SSLVERSION_SSLv2 (2),
                                    CURL_SSLVERSION_SSLv3 (3),
                                    CURL_SSLVERSION_TLSv1_0 (4),
                                    CURL_SSLVERSION_TLSv1_1 (5) or
                                    CURL_SSLVERSION_TLSv1_2 (6). The
                                    maximum TLS version can be set by
                                    using one of the
                                    CURL_SSLVERSION_MAX_* constants. It
                                    is also possible to OR one of the
                                    CURL_SSLVERSION_* constants with
                                    one of the CURL_SSLVERSION_MAX_*
                                    constants.
                                    CURL_SSLVERSION_MAX_DEFAULT (the
  CURLOPT_SSLVERSION                maximum version supported by the
                                    library),
                                    CURL_SSLVERSION_MAX_TLSv1_0,
                                    CURL_SSLVERSION_MAX_TLSv1_1,
                                    CURL_SSLVERSION_MAX_TLSv1_2, or
                                    CURL_SSLVERSION_MAX_TLSv1_3.


                                      Note:

                                      Your best bet is to not set this
                                      and let it use the default.
                                      Setting it to 2 or 3 is very
                                      dangerous given the known
                                      vulnerabilities in SSLv2 and
                                      SSLv3.

                                    Set proxy SSL behavior options,
                                    which is a bitmask of any of the
                                    following constants: 
                                    CURLSSLOPT_ALLOW_BEAST: do not
                                    attempt to use any workarounds for  Available
                                    a security flaw in the SSL3 and     since PHP
                                    TLS1.0 protocols.                   7.3.0 and
  CURLOPT_PROXY_SSL_OPTIONS         CURLSSLOPT_NO_REVOKE: disable       libcurl >
                                    certificate revocation checks for   = cURL
                                    those SSL backends where such       7.52.0.
                                    behavior is present. (curl >=
                                    7.44.0) CURLSSLOPT_NO_PARTIALCHAIN:
                                    do not accept "partial" certificate
                                    chains, which it otherwise does by
                                    default. (curl >= 7.68.0)
                                    Set to 2 to verify in the HTTPS
                                    proxy's certificate name fields
                                    against the proxy name. When set to
                                    0 the connection succeeds
                                    regardless of the names used in the Available
                                    certificate. Use that ability with  since PHP
                                    caution! 1 treated as a debug       7.3.0 and
  CURLOPT_PROXY_SSL_VERIFYHOST      option in curl 7.28.0 and earlier.  libcurl >
                                    From curl 7.28.1 to 7.65.3          = cURL
                                    CURLE_BAD_FUNCTION_ARGUMENT is      7.52.0.
                                    returned. From curl 7.66.0 onwards
                                    1 and 2 is treated as the same
                                    value. In production environments
                                    the value of this option should be
                                    kept at 2 (default value).
                                    One of CURL_SSLVERSION_DEFAULT,
                                    CURL_SSLVERSION_TLSv1,
                                    CURL_SSLVERSION_TLSv1_0,
                                    CURL_SSLVERSION_TLSv1_1,
                                    CURL_SSLVERSION_TLSv1_2,
                                    CURL_SSLVERSION_TLSv1_3,
                                    CURL_SSLVERSION_MAX_DEFAULT,
                                    CURL_SSLVERSION_MAX_TLSv1_0,
                                    CURL_SSLVERSION_MAX_TLSv1_1,        Available
                                    CURL_SSLVERSION_MAX_TLSv1_2,        since PHP
  CURLOPT_PROXY_SSLVERSION          CURL_SSLVERSION_MAX_TLSv1_3 or      7.3.0 and
                                    CURL_SSLVERSION_SSLv3.              libcurl >
                                                                        = cURL
                                                                        7.52.0.
                                      Note:

                                      Your best bet is to not set this
                                      and let it use the default
                                      CURL_SSLVERSION_DEFAULT which
                                      will attempt to figure out the
                                      remote SSL protocol version.

                                                                        Added in
                                                                        cURL
  CURLOPT_STREAM_WEIGHT             Set the numerical stream weight (a  7.46.0.
                                    number between 1 and 256).          Available
                                                                        since PHP
                                                                        7.0.7.
                                    If set to 1, TCP keepalive probes
                                    will be sent. The delay and
                                    frequency of these probes can be    Added in
                                    controlled by the                   cURL
  CURLOPT_TCP_KEEPALIVE             CURLOPT_TCP_KEEPIDLE and            7.25.0.
                                    CURLOPT_TCP_KEEPINTVL options,      Available
                                    provided the operating system       since PHP
                                    supports them. If set to 0          5.5.0.
                                    (default) keepalive probes are
                                    disabled.
                                    Sets the delay, in seconds, that    Added in
                                    the operating system will wait      cURL
                                    while the connection is idle before 7.25.0.
  CURLOPT_TCP_KEEPIDLE              sending keepalive probes, if        Available
                                    CURLOPT_TCP_KEEPALIVE is enabled.   since PHP
                                    Not all operating systems support   5.5.0.
                                    this option. The default is 60.
                                    Sets the interval, in seconds, that Added in
                                    the operating system will wait      cURL
                                    between sending keepalive probes,   7.25.0.
  CURLOPT_TCP_KEEPINTVL             if CURLOPT_TCP_KEEPALIVE is         Available
                                    enabled. Not all operating systems  since PHP
                                    support this option. The default is 5.5.0.
                                    60.
                                    How CURLOPT_TIMEVALUE is treated.
                                    Use CURL_TIMECOND_IFMODSINCE to
                                    return the page only if it has been
                                    modified since the time specified
                                    in CURLOPT_TIMEVALUE. If it hasn't
  CURLOPT_TIMECONDITION             been modified, a "304 Not Modified"
                                    header will be returned assuming
                                    CURLOPT_HEADER is TRUE. Use
                                    CURL_TIMECOND_IFUNMODSINCE for the
                                    reverse effect.
                                    CURL_TIMECOND_IFMODSINCE is the
                                    default.
  CURLOPT_TIMEOUT                   The maximum number of seconds to
                                    allow cURL functions to execute.
                                    The maximum number of milliseconds
                                    to allow cURL functions to execute. Added in
                                    If libcurl is built to use the      cURL
  CURLOPT_TIMEOUT_MS                standard system name resolver, that 7.16.2.
                                    portion of the connect will still   Available
                                    use full-second resolution for      since PHP
                                    timeouts with a minimum timeout     5.2.3.
                                    allowed of one second.
                                    The time in seconds since January
  CURLOPT_TIMEVALUE                 1st, 1970. The time will be used by
                                    CURLOPT_TIMECONDITION. By default,
                                    CURL_TIMECOND_IFMODSINCE is used.
                                    The time in seconds since January
                                    1st, 1970. The time will be used by Added in
                                    CURLOPT_TIMECONDITION. Defaults to  cURL
                                    zero. The difference between this   7.59.0.
  CURLOPT_TIMEVALUE_LARGE           option and CURLOPT_TIMEVALUE is the Available
                                    type of the argument. On systems    since PHP
                                    where 'long' is only 32 bit wide,   7.3.0.
                                    this option has to be used to set
                                    dates beyond the year 2038.
                                    If a download exceeds this speed    Added in
                                    (counted in bytes per second) on    cURL
                                    cumulative average during the       7.15.5.
  CURLOPT_MAX_RECV_SPEED_LARGE      transfer, the transfer will pause   Available
                                    to keep the average rate less than  since PHP
                                    or equal to the parameter value.    5.4.0.
                                    Defaults to unlimited speed.
                                    If an upload exceeds this speed     Added in
                                    (counted in bytes per second) on    cURL
                                    cumulative average during the       7.15.5.
  CURLOPT_MAX_SEND_SPEED_LARGE      transfer, the transfer will pause   Available
                                    to keep the average rate less than  since PHP
                                    or equal to the parameter value.    5.4.0.
                                    Defaults to unlimited speed.
                                    A bitmask consisting of one or more
                                    of CURLSSH_AUTH_PUBLICKEY,
                                    CURLSSH_AUTH_PASSWORD,              Added in
  CURLOPT_SSH_AUTH_TYPES            CURLSSH_AUTH_HOST,                  cURL
                                    CURLSSH_AUTH_KEYBOARD. Set to       7.16.1.
                                    CURLSSH_AUTH_ANY to let libcurl
                                    pick one.
                                    Allows an application to select
                                    what kind of IP addresses to use
                                    when resolving host names. This is
                                    only interesting when using host
                                    names that resolve addresses using  Added in
  CURLOPT_IPRESOLVE                 more than one version of IP,        cURL
                                    possible values are                 7.10.8.
                                    CURL_IPRESOLVE_WHATEVER,
                                    CURL_IPRESOLVE_V4,
                                    CURL_IPRESOLVE_V6, by default
                                    CURL_IPRESOLVE_WHATEVER.
                                    Tell curl which method to use to    Added in
                                    reach a file on a FTP(S) server.    cURL
  CURLOPT_FTP_FILEMETHOD            Possible values are                 7.15.1.
                                    CURLFTPMETHOD_MULTICWD,             Available
                                    CURLFTPMETHOD_NOCWD and             since PHP
                                    CURLFTPMETHOD_SINGLECWD.            5.3.0.

  {value} should be a string for the following values of the {option}
  parameter:

              Option                       Set {value} to             Notes
                                  Enables the use of an abstract
                                  Unix domain socket instead of
                                  establishing a TCP connection to
                                  a host and sets the path to the  Available
  CURLOPT_ABSTRACT_UNIX_SOCKET    given string. This option shares since PHP
                                  the same semantics as            7.3.0 and
                                  CURLOPT_UNIX_SOCKET_PATH. These  cURL 7.53.0
                                  two options share the same
                                  storage and therefore only one
                                  of them can be set per handle.
                                  The name of a file holding one   Might
                                  or more certificates to verify   require an
  CURLOPT_CAINFO                  the peer with. This only makes   absolute
                                  sense when used in combination   path.
                                  with CURLOPT_SSL_VERIFYPEER.
                                  A directory that holds multiple
  CURLOPT_CAPATH                  CA certificates. Use this option
                                  alongside CURLOPT_SSL_VERIFYPEER
                                  .
                                  The contents of the "Cookie: "
                                  header to be used in the HTTP
                                  request. Note that multiple
  CURLOPT_COOKIE                  cookies are separated with a
                                  semicolon followed by a space
                                  (e.g., "fruit=apple; colour=
                                  red")
                                  The name of the file containing
                                  the cookie data. The cookie file
                                  can be in Netscape format, or
  CURLOPT_COOKIEFILE              just plain HTTP-style headers
                                  dumped into a file. If the name
                                  is an empty string, no cookies
                                  are loaded, but cookie handling
                                  is still enabled.
                                  The name of a file to save all
  CURLOPT_COOKIEJAR               internal cookies to when the
                                  handle is closed, e.g. after a
                                  call to curl_close.
                                  A cookie string (i.e. a single
                                  line in Netscape/Mozilla format,
                                  or a regular HTTP-style
                                  Set-Cookie header) adds that
                                  single cookie to the internal
                                  cookie store. "ALL" erases all   Available
  CURLOPT_COOKIELIST              cookies held in memory. "SESS"   since PHP
                                  erases all session cookies held  5.5.0 and
                                  in memory. "FLUSH" writes all    cURL 7.14.1.
                                  known cookies to the file
                                  specified by CURLOPT_COOKIEJAR.
                                  "RELOAD" loads all cookies from
                                  the files specified by
                                  CURLOPT_COOKIEFILE.
                                  A custom request method to use
                                  instead of "GET" or "HEAD" when
                                  doing a HTTP request. This is
                                  useful for doing "DELETE" or
                                  other, more obscure HTTP
                                  requests. Valid values are
                                  things like "GET", "POST",
                                  "CONNECT" and so on; i.e. Do not
                                  enter a whole HTTP request line
  CURLOPT_CUSTOMREQUEST           here. For instance, entering
                                  "GET /index.html HTTP/1.0\r\n\r\
                                  n" would be incorrect.


                                    Note:

                                    Don't do this without making
                                    sure the server supports the
                                    custom request method first.

                                  The default protocol to use if   Added in
                                  the URL is missing a scheme      cURL 7.45.0.
  CURLOPT_DEFAULT_PROTOCOL        name.                            Available
                                                                   since PHP
                                                                   7.0.7.
                                  Set the name of the network      Added in
                                  interface that the DNS resolver  cURL 7.33.0.
  CURLOPT_DNS_INTERFACE           should bind to. This must be an  Available
                                  interface name (not an address). since PHP
                                                                   7.0.7.
                                  Set the local IPv4 address that  Added in
                                  the resolver should bind to. The cURL 7.33.0.
  CURLOPT_DNS_LOCAL_IP4           argument should contain a single Available
                                  numerical IPv4 address as a      since PHP
                                  string.                          7.0.7.

                                  Set the local IPv6 address that  Added in
                                  the resolver should bind to. The cURL 7.33.0.
  CURLOPT_DNS_LOCAL_IP6           argument should contain a single Available
                                  numerical IPv6 address as a      since PHP
                                  string.                          7.0.7.

                                  Like CURLOPT_RANDOM_FILE, except
  CURLOPT_EGDSOCKET               a filename to an Entropy
                                  Gathering Daemon socket.
                                  The contents of the
                                  "Accept-Encoding: " header. This
                                  enables decoding of the
                                  response. Supported encodings    Added in
  CURLOPT_ENCODING                are "identity", "deflate", and   cURL 7.10.
                                  "gzip". If an empty string, "",
                                  is set, a header containing all
                                  supported encoding types is
                                  sent.
                                  The value which will be used to
                                  get the IP address to use for
                                  the FTP "PORT" instruction. The
                                  "PORT" instruction tells the
                                  remote server to connect to our
  CURLOPT_FTPPORT                 specified IP address. The string
                                  may be a plain IP address, a
                                  hostname, a network interface
                                  name (under Unix), or just a
                                  plain '-' to use the systems
                                  default IP address.
                                  The name of the outgoing network
  CURLOPT_INTERFACE               interface to use. This can be an
                                  interface name, an IP address or
                                  a host name.
                                  The password required to use the
  CURLOPT_KEYPASSWD               CURLOPT_SSLKEY or                Added in
                                  CURLOPT_SSH_PRIVATE_KEYFILE      cURL 7.16.1.
                                  private key.
                                  The KRB4 (Kerberos 4) security
                                  level. Any of the following
                                  values (in order from least to
                                  most powerful) are valid:
                                  "clear", "safe", "confidential",
  CURLOPT_KRB4LEVEL               "private".. If the string does
                                  not match one of these,
                                  "private" is used. Setting this
                                  option to NULL will disable KRB4
                                  security. Currently KRB4
                                  security only works with FTP
                                  transactions.
                                  Can be used to set protocol
                                  specific login options, such as  Added in
                                  the preferred authentication     cURL 7.34.0.
  CURLOPT_LOGIN_OPTIONS           mechanism via "AUTH=NTLM" or     Available
                                  "AUTH=*", and should be used in  since PHP
                                  conjunction with the             7.0.7.
                                  CURLOPT_USERNAME option.
                                  Set the pinned public key. The
                                  string can be the file name of   Added in
                                  your pinned public key. The file cURL 7.39.0.
  CURLOPT_PINNEDPUBLICKEY         format expected is "PEM" or      Available
                                  "DER". The string can also be    since PHP
                                  any number of base64 encoded     7.0.7.
                                  sha256 hashes preceded by
                                  "sha256//" and separated by ";".
                                  The full data to post in a HTTP
                                  "POST" operation. This parameter
                                  can either be passed as a
                                  urlencoded string like 'para1=
                                  val1&para2=val2&...' or as an
                                  array with the field name as key
  CURLOPT_POSTFIELDS              and field data as value. If
                                  {value} is an array, the
                                  Content-Type header will be set
                                  to multipart/form-data. Files
                                  can be sent using CURLFile, in
                                  which case {value} must be an
                                  array.
                                  Any data that should be
                                  associated with this cURL
                                  handle. This data can
                                  subsequently be retrieved with
                                  the CURLINFO_PRIVATE option of | Added in
  CURLOPT_PRIVATE                 curl_getinfo|. cURL does nothing cURL 7.10.3.
                                  with this data. When using a
                                  cURL multi handle, this private
                                  data is typically a unique key
                                  to identify a standard cURL
                                  handle.
                                  Set a string holding the host
                                  name or dotted numerical IP
                                  address to be used as the
                                  preproxy that curl connects to
                                  before it connects to the HTTP
                                  (S) proxy specified in the
                                  CURLOPT_PROXY option for the
                                  upcoming request. The preproxy
                                  can only be a SOCKS proxy and it
                                  should be prefixed with
                                  [scheme]:// to specify which     Available
                                  kind of socks is used. A         since PHP
  CURLOPT_PRE_PROXY               numerical IPv6 address must be   7.3.0 and
                                  written within [brackets].       libcurl >=
                                  Setting the preproxy to an empty cURL 7.52.0.
                                  string explicitly disables the
                                  use of a preproxy. To specify
                                  port number in this string,
                                  append :[port] to the end of the
                                  host name. The proxy's port
                                  number may optionally be
                                  specified with the separate
                                  option CURLOPT_PROXYPORT.
                                  Defaults to using port 1080 for
                                  proxies if a port is not
                                  specified.
  CURLOPT_PROXY                   The HTTP proxy to tunnel
                                  requests through.
                                                                   Added in
                                  The proxy authentication service cURL 7.34.0.
  CURLOPT_PROXY_SERVICE_NAME      name.                            Available
                                                                   since PHP
                                                                   7.0.7.
                                  The path to proxy Certificate
                                  Authority (CA) bundle. Set the
                                  path as a string naming a file
                                  holding one or more certificates Available
                                  to verify the HTTPS proxy with.  since PHP
  CURLOPT_PROXY_CAINFO            This option is for connecting to 7.3.0 and
                                  an HTTPS proxy, not an HTTPS     libcurl >=
                                  server. Defaults set to the      cURL 7.52.0.
                                  system path where libcurl's
                                  cacert bundle is assumed to be
                                  stored.
                                                                   Available
                                  The directory holding multiple   since PHP
  CURLOPT_PROXY_CAPATH            CA certificates to verify the    7.3.0 and
                                  HTTPS proxy with.                libcurl >=
                                                                   cURL 7.52.0.
                                  Set the file name with the       Available
                                  concatenation of CRL             since PHP
  CURLOPT_PROXY_CRLFILE           (Certificate Revocation List) in 7.3.0 and
                                  PEM format to use in the         libcurl >=
                                  certificate validation that      cURL 7.52.0.
                                  occurs during the SSL exchange.
                                  Set the string be used as the
                                  password required to use the
                                  CURLOPT_PROXY_SSLKEY private     Available
                                  key. You never needed a          since PHP
  CURLOPT_PROXY_KEYPASSWD         passphrase to load a certificate 7.3.0 and
                                  but you need one to load your    libcurl >=
                                  private key. This option is for  cURL 7.52.0.
                                  connecting to an HTTPS proxy,
                                  not an HTTPS server.
                                  Set the pinned public key for
                                  HTTPS proxy. The string can be
                                  the file name of your pinned     Available
                                  public key. The file format      since PHP
  CURLOPT_PROXY_PINNEDPUBLICKEY   expected is "PEM" or "DER". The  7.3.0 and
                                  string can also be any number of libcurl >=
                                  base64 encoded sha256 hashes     cURL 7.52.0.
                                  preceded by "sha256//" and
                                  separated by ";"
                                  The file name of your client
                                  certificate used to connect to
                                  the HTTPS proxy. The default
                                  format is "P12" on Secure
                                  Transport and "PEM" on other
                                  engines, and can be changed with
                                  CURLOPT_PROXY_SSLCERTTYPE. With  Available
                                  NSS or Secure Transport, this    since PHP
  CURLOPT_PROXY_SSLCERT           can also be the nickname of the  7.3.0 and
                                  certificate you wish to          libcurl >=
                                  authenticate with as it is named cURL 7.52.0.
                                  in the security database. If you
                                  want to use a file from the
                                  current directory, please
                                  precede it with "./" prefix, in
                                  order to avoid confusion with a
                                  nickname.
                                  The format of your client
                                  certificate used when connecting
                                  to an HTTPS proxy. Supported
                                  formats are "PEM" and "DER",     Available
                                  except with Secure Transport.    since PHP
  CURLOPT_PROXY_SSLCERTTYPE       OpenSSL (versions 0.9.3 and      7.3.0 and
                                  later) and Secure Transport (on  libcurl >=
                                  iOS 5 or later, or OS X 10.7 or  cURL 7.52.0.
                                  later) also support "P12" for
                                  PKCS#12-encoded files. Defaults
                                  to "PEM".
                                  The list of ciphers to use for
                                  the connection to the HTTPS
                                  proxy. The list must be          Available
                                  syntactically correct, it        since PHP
  CURLOPT_PROXY_SSL_CIPHER_LIST   consists of one or more cipher   7.3.0 and
                                  strings separated by colons.     libcurl >=
                                  Commas or spaces are also        cURL 7.52.0.
                                  acceptable separators but colons
                                  are normally used, !, - and +
                                  can be used as operators.
                                  The list of cipher suites to use
                                  for the TLS 1.3 connection to a
                                  proxy. The list must be          Available
                                  syntactically correct, it        since PHP
                                  consists of one or more cipher   7.3.0 and
                                  suite strings separated by       libcurl >=
  CURLOPT_PROXY_TLS13_CIPHERS     colons. This option is currently cURL 7.61.0.
                                  used only when curl is built to  Available
                                  use OpenSSL 1.1.1 or later. If   when built
                                  you are using a different SSL    with OpenSSL
                                  backend you can try setting TLS  >= 1.1.1.
                                  1.3 cipher suites by using the
                                  CURLOPT_PROXY_SSL_CIPHER_LIST
                                  option.
                                  The file name of your private    Available
                                  key used for connecting to the   since PHP
                                  HTTPS proxy. The default format  7.3.0 and
  CURLOPT_PROXY_SSLKEY            is "PEM" and can be changed with libcurl >=
                                  CURLOPT_PROXY_SSLKEYTYPE. (iOS   cURL 7.52.0.
                                  and Mac OS X only) This option   Available if
                                  is ignored if curl was built     built TLS
                                  against Secure Transport.        enabled.
                                                                   Available
                                  The format of your private key.  since PHP
  CURLOPT_PROXY_SSLKEYTYPE        Supported formats are "PEM",     7.3.0 and
                                  "DER" and "ENG".                 libcurl >=
                                                                   cURL 7.52.0.
                                  The password to use for the TLS
                                  authentication method specified  Available
                                  with the                         since PHP
  CURLOPT_PROXY_TLSAUTH_PASSWORD  CURLOPT_PROXY_TLSAUTH_TYPE       7.3.0 and
                                  option. Requires that the        libcurl >=
                                  CURLOPT_PROXY_TLSAUTH_USERNAME   cURL 7.52.0.
                                  option to also be set.
                                  The method of the TLS
                                  authentication used for the
                                  HTTPS connection. Supported
                                  method is "SRP".


                                    Note:
                                                                   Available
                                    Secure Remote Password (SRP)   since PHP
  CURLOPT_PROXY_TLSAUTH_TYPE        authentication for TLS         7.3.0 and
                                    provides mutual authentication libcurl >=
                                    if both sides have a shared    cURL 7.52.0.
                                    secret. To use TLS-SRP, you
                                    must also set the
                                    CURLOPT_PROXY_TLSAUTH_USERNAME
                                    and
                                    CURLOPT_PROXY_TLSAUTH_PASSWORD
                                    options.

                                  Tusername to use for the HTTPS
                                  proxy TLS authentication method  Available
                                  specified with the               since PHP
  CURLOPT_PROXY_TLSAUTH_USERNAME  CURLOPT_PROXY_TLSAUTH_TYPE       7.3.0 and
                                  option. Requires that the        libcurl >=
                                  CURLOPT_PROXY_TLSAUTH_PASSWORD   cURL 7.52.0.
                                  option to also be set.
                                  A username and password
  CURLOPT_PROXYUSERPWD            formatted as "[username]:
                                  [password]" to use for the
                                  connection to the proxy.
                                  A filename to be used to seed
  CURLOPT_RANDOM_FILE             the random number generator for
                                  SSL.
                                  Range(s) of data to retrieve in
                                  the format "X-Y" where X or Y
  CURLOPT_RANGE                   are optional. HTTP transfers
                                  also support several intervals,
                                  separated with commas in the
                                  format "X-Y,N-M".
                                  The contents of the "Referer: "
  CURLOPT_REFERER                 header to be used in a HTTP
                                  request.
                                                                   Added in
                                                                   cURL 7.43.0.
  CURLOPT_SERVICE_NAME            The authentication service name. Available
                                                                   since PHP
                                                                   7.0.7.
                                  A string containing 32
                                  hexadecimal digits. The string
                                  should be the MD5 checksum of
                                  the remote host's public key,    Added in
  CURLOPT_SSH_HOST_PUBLIC_KEY_MD5 and libcurl will reject the      cURL 7.17.1.
                                  connection to the host unless
                                  the md5sums match. This option
                                  is only for SCP and SFTP
                                  transfers.
                                  The file name for your public
                                  key. If not used, libcurl
                                  defaults to $HOME/.ssh/          Added in
  CURLOPT_SSH_PUBLIC_KEYFILE      id_dsa.pub if the HOME           cURL 7.16.1.
                                  environment variable is set, and
                                  just "id_dsa.pub" in the current
                                  directory if HOME is not set.
                                  The file name for your private
                                  key. If not used, libcurl
                                  defaults to $HOME/.ssh/id_dsa if
                                  the HOME environment variable is Added in
  CURLOPT_SSH_PRIVATE_KEYFILE     set, and just "id_dsa" in the    cURL 7.16.1.
                                  current directory if HOME is not
                                  set. If the file is
                                  password-protected, set the
                                  password with CURLOPT_KEYPASSWD.
                                  A list of ciphers to use for
  CURLOPT_SSL_CIPHER_LIST         SSL. For example, RC4-SHA and
                                  TLSv1 are valid cipher lists.
  CURLOPT_SSLCERT                 The name of a file containing a
                                  PEM formatted certificate.
  CURLOPT_SSLCERTPASSWD           The password required to use the
                                  CURLOPT_SSLCERT certificate.
                                  The format of the certificate.
                                  Supported formats are "PEM"
  CURLOPT_SSLCERTTYPE             (default), "DER", and "ENG". As  Added in
                                  of OpenSSL 0.9.3, "P12" (for     cURL 7.9.3.
                                  PKCS#12-encoded files) is also
                                  supported.
                                  The identifier for the crypto
  CURLOPT_SSLENGINE               engine of the private SSL key
                                  specified in CURLOPT_SSLKEY.
                                  The identifier for the crypto
  CURLOPT_SSLENGINE_DEFAULT       engine used for asymmetric
                                  crypto operations.
  CURLOPT_SSLKEY                  The name of a file containing a
                                  private SSL key.
                                  The secret password needed to
                                  use the private SSL key
                                  specified in CURLOPT_SSLKEY.


  CURLOPT_SSLKEYPASSWD              Note:

                                    Since this option contains a
                                    sensitive password, remember
                                    to keep the PHP script it is
                                    contained within safe.

                                  The key type of the private SSL
  CURLOPT_SSLKEYTYPE              key specified in CURLOPT_SSLKEY.
                                  Supported key types are "PEM"
                                  (default), "DER", and "ENG".
                                  The list of cipher suites to use
                                  for the TLS 1.3 connection. The
                                  list must be syntactically       Available
                                  correct, it consists of one or   since PHP
                                  more cipher suite strings        7.3.0 and
                                  separated by colons. This option libcurl >=
  CURLOPT_TLS13_CIPHERS           is currently used only when curl cURL 7.61.0.
                                  is built to use OpenSSL 1.1.1 or Available
                                  later. If you are using a        when built
                                  different SSL backend you can    with OpenSSL
                                  try setting TLS 1.3 cipher       >= 1.1.1.
                                  suites by using the
                                  CURLOPT_SSL_CIPHER_LIST option.
                                  Enables the use of Unix domain   Added in
                                  sockets as connection endpoint   cURL 7.40.0.
  CURLOPT_UNIX_SOCKET_PATH        and sets the path to the given   Available
                                  string.                          since PHP
                                                                   7.0.7.
                                  The URL to fetch. This can also
  CURLOPT_URL                     be set when initializing a
                                  session with |curl_init|.
                                  The contents of the "User-Agent:
  CURLOPT_USERAGENT               " header to be used in a HTTP
                                  request.
                                                                   Added in
                                  The user name to use in          cURL 7.19.1.
  CURLOPT_USERNAME                authentication.                  Available
                                                                   since PHP
                                                                   5.5.0.
                                  A username and password
  CURLOPT_USERPWD                 formatted as "[username]:
                                  [password]" to use for the
                                  connection.
                                                                   Added in
                                  Specifies the OAuth 2.0 access   cURL 7.33.0.
  CURLOPT_XOAUTH2_BEARER          token.                           Available
                                                                   since PHP
                                                                   7.0.7.

  {value} should be an array for the following values of the {option}
  parameter:

          Option                       Set {value} to                  Notes
                         Connect to a specific host and port        Added in
                         instead of the URL's host and port.        cURL
  CURLOPT_CONNECT_TO     Accepts an array of strings with the       7.49.0.
                         format                                     Available
                         HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT. since PHP
                                                                    7.0.7.
                         An array of HTTP 200 responses that will   Added in
  CURLOPT_HTTP200ALIASES be treated as valid responses and not as   cURL
                         errors.                                    7.10.3.
                         An array of HTTP header fields to set, in
  CURLOPT_HTTPHEADER     the format array('Content-type: text/
                         plain', 'Content-length: 100')
                         An array of FTP commands to execute on the
  CURLOPT_POSTQUOTE      server after the FTP request has been
                         performed.
                                                                    Added in
                                                                    cURL
  CURLOPT_PROXYHEADER    An array of custom HTTP headers to pass to 7.37.0.
                         proxies.                                   Available
                                                                    since PHP
                                                                    7.0.7.
  CURLOPT_QUOTE          An array of FTP commands to execute on the
                         server prior to the FTP request.
                         Provide a custom address for a specific    Added in
                         host and port pair. An array of hostname,  cURL
  CURLOPT_RESOLVE        port, and IP address strings, each element 7.21.3.
                         separated by a colon. In the format: array Available
                         ("example.com:80:127.0.0.1")               since PHP
                                                                    5.5.0.

  {value} should be a stream resource (using |fopen|, for example) for the
  following values of the {option} parameter:

        Option                             Set {value} to
  CURLOPT_FILE        The file that the transfer should be written to. The
                      default is STDOUT (the browser window).
  CURLOPT_INFILE      The file that the transfer should be read from when
                      uploading.
  CURLOPT_STDERR      An alternative location to output errors to instead of
                      STDERR.
  CURLOPT_WRITEHEADER The file that the header part of the transfer is written
                      to.

  {value} should be the name of a valid function or a Closure for the following
  values of the {option} parameter:

           Option                             Set {value} to
                           A callback accepting two parameters. The first is
                           the cURL resource, the second is a string with the
  CURLOPT_HEADERFUNCTION   header data to be written. The header data must be
                           written by this callback. Return the number of bytes
                           written.
                           A callback accepting three parameters. The first is
                           the cURL resource, the second is a string containing
  CURLOPT_PASSWDFUNCTION   a password prompt, and the third is the maximum
                           password length. Return the string containing the
                           password.
                           A callback accepting five parameters. The first is
                           the cURL resource, the second is the total number of
                           bytes expected to be downloaded in this transfer,
                           the third is the number of bytes downloaded so far,
                           the fourth is the total number of bytes expected to
                           be uploaded in this transfer, and the fifth is the
                           number of bytes uploaded so far.

  CURLOPT_PROGRESSFUNCTION   Note:

                             The callback is only called when the
                             CURLOPT_NOPROGRESS option is set to FALSE.

                           Return a non-zero value to abort the transfer. In
                           which case, the transfer will set a
                           CURLE_ABORTED_BY_CALLBACK error.

                           A callback accepting three parameters. The first is
                           the cURL resource, the second is a stream resource
                           provided to cURL through the option CURLOPT_INFILE,
                           and the third is the maximum amount of data to be
  CURLOPT_READFUNCTION     read. The callback must return a string with a
                           length equal or smaller than the amount of data
                           requested, typically by reading it from the passed
                           stream resource. It should return an empty string to
                           signal EOF.
                           A callback accepting two parameters. The first is
                           the cURL resource, and the second is a string with
  CURLOPT_WRITEFUNCTION    the data to be written. The data must be saved by
                           this callback. It must return the exact number of
                           bytes written or the transfer will be aborted with
                           an error.

  Other values:

     Option                             Set {value} to
  CURLOPT_SHARE A result of |curl_share_init|. Makes the cURL handle to use the
                data from the shared handle.

===============================================================================
[ Return Values ]

Returns TRUE on success or FALSE on failure.

===============================================================================
[ Changelog ]

Version                               Description
8.0.0   {handle} expects a CurlHandle instance now; previously, a resource was
        expected.
7.3.15, Introduced CURLOPT_HTTP09_ALLOWED .
7.4.3
        Introduced CURLOPT_ABSTRACT_UNIX_SOCKET, CURLOPT_KEEP_SENDING_ON_ERROR,
        CURLOPT_PRE_PROXY, CURLOPT_PROXY_CAINFO, CURLOPT_PROXY_CAPATH,
        CURLOPT_PROXY_CRLFILE, CURLOPT_PROXY_KEYPASSWD,
        CURLOPT_PROXY_PINNEDPUBLICKEY, CURLOPT_PROXY_SSLCERT,
        CURLOPT_PROXY_SSLCERTTYPE, CURLOPT_PROXY_SSL_CIPHER_LIST,
        CURLOPT_PROXY_SSLKEY, CURLOPT_PROXY_SSLKEYTYPE,
        CURLOPT_PROXY_SSL_OPTIONS, CURLOPT_PROXY_SSL_VERIFYHOST,
7.3.0   CURLOPT_PROXY_SSL_VERIFYPEER, CURLOPT_PROXY_SSLVERSION,
        CURLOPT_PROXY_TLSAUTH_PASSWORD, CURLOPT_PROXY_TLSAUTH_TYPE,
        CURLOPT_PROXY_TLSAUTH_USERNAME, CURLOPT_SOCKS5_AUTH,
        CURLOPT_SUPPRESS_CONNECT_HEADERS, CURLOPT_DISALLOW_USERNAME_IN_URL,
        CURLOPT_DNS_SHUFFLE_ADDRESSES, CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS,
        CURLOPT_HAPROXYPROTOCOL, CURLOPT_PROXY_TLS13_CIPHERS,
        CURLOPT_SSH_COMPRESSION, CURLOPT_TIMEVALUE_LARGE and
        CURLOPT_TLS13_CIPHERS.
        Introduced CURL_HTTP_VERSION_2, CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE,
        CURL_HTTP_VERSION_2TLS, CURL_REDIR_POST_301, CURL_REDIR_POST_302,
        CURL_REDIR_POST_303, CURL_REDIR_POST_ALL, CURL_VERSION_KERBEROS5,
        CURL_VERSION_PSL, CURL_VERSION_UNIX_SOCKETS, CURLAUTH_NEGOTIATE,
        CURLAUTH_NTLM_WB, CURLFTP_CREATE_DIR, CURLFTP_CREATE_DIR_NONE,
        CURLFTP_CREATE_DIR_RETRY, CURLHEADER_SEPARATE, CURLHEADER_UNIFIED,
        CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE,
        CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE, CURLMOPT_MAX_HOST_CONNECTIONS,
        CURLMOPT_MAX_PIPELINE_LENGTH, CURLMOPT_MAX_TOTAL_CONNECTIONS,
7.0.7   CURLOPT_CONNECT_TO, CURLOPT_DEFAULT_PROTOCOL, CURLOPT_DNS_INTERFACE,
        CURLOPT_DNS_LOCAL_IP4, CURLOPT_DNS_LOCAL_IP6,
        CURLOPT_EXPECT_100_TIMEOUT_MS, CURLOPT_HEADEROPT, CURLOPT_LOGIN_OPTIONS
        , CURLOPT_PATH_AS_IS, CURLOPT_PINNEDPUBLICKEY, CURLOPT_PIPEWAIT,
        CURLOPT_PROXY_SERVICE_NAME, CURLOPT_PROXYHEADER, CURLOPT_SASL_IR,
        CURLOPT_SERVICE_NAME, CURLOPT_SSL_ENABLE_ALPN, CURLOPT_SSL_ENABLE_NPN,
        CURLOPT_SSL_FALSESTART, CURLOPT_SSL_VERIFYSTATUS, CURLOPT_STREAM_WEIGHT
        , CURLOPT_TCP_FASTOPEN, CURLOPT_TFTP_NO_OPTIONS,
        CURLOPT_UNIX_SOCKET_PATH, CURLOPT_XOAUTH2_BEARER, CURLPROTO_SMB,
        CURLPROTO_SMBS, CURLPROXY_HTTP_1_0, CURLSSH_AUTH_AGENT and
        CURLSSLOPT_NO_REVOKE.

===============================================================================
[ Examples ]

Example #1 Initializing a new cURL session and fetching a web page

<?php >
  // create a new cURL resource
  $ch = curl_init();

  // set URL and other appropriate options
  curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
  curl_setopt($ch, CURLOPT_HEADER, false);

  // grab URL and pass it to the browser
  curl_exec($ch);

  // close cURL resource, and free up system resources
  curl_close($ch);
<?>

===============================================================================
[ Notes ]

  Note:

  Passing an array to CURLOPT_POSTFIELDS will encode the data as multipart/
  form-data, while passing a URL-encoded string will encode the data as
  application/x-www-form-urlencoded.

===============================================================================
[ See Also ]

 * |curl_setopt_array| - Set multiple options for a cURL transfer


vim:ft=help: